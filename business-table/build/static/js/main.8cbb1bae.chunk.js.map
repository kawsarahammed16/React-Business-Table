{"version":3,"sources":["component/BusinessTable.js","pages/BusinessTablePage.js","App.js","reportWebVitals.js","index.js"],"names":["BusinessTable","props","useState","SetSearchKey1","ItemList","SetItemList","listRef","React","createRef","Container","className","Row","Col","md","lg","fluid","placeholder","onChange","e","keyword","target","value","results","filter","search","name","toLowerCase","startsWith","type","rowNo","parseInt","current","scrollToItem","Dropdown","Toggle","variant","id","Menu","Item","onClick","data","exportFromJSON","fileName","exportType","bind","ref","itemCount","length","height","itemSize","index","style","split","capital","region","population","area","alt","src","flag","BusinessTablePage","useEffect","axios","get","then","res","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8cbb1bae.chunk.js","sourcesContent":["import React, {Fragment,useState} from 'react';\r\nimport {Button, Col, Container, Dropdown, Row} from \"react-bootstrap\";\r\nimport { FixedSizeList } from \"react-window\";\r\nimport {FaSearch} from \"react-icons/fa\";\r\nimport exportFromJSON from 'export-from-json';\r\n\r\nimport {RiFileExcel2Line} from \"react-icons/ri\";\r\nimport {FiArrowRight, FiArrowRightCircle} from \"react-icons/fi\";\r\n\r\nconst BusinessTable = (props) => {\r\n\r\n    const [SearchKey1, SetSearchKey1] = useState(\"\");\r\n    const [ItemList,SetItemList]=useState(props.ItemList);\r\n\r\n    const RowList = ({ index, style }) => (\r\n        <Row  className=\"grid-row\" style={style}>\r\n            <Col className=\"grid-col-first\" md={1} lg={1} >{index}</Col>\r\n            <Col className=\"grid-col \" md={2} lg={2}>{ItemList[index].name.split(\" \")[0]}</Col>\r\n            <Col className=\"grid-col\" md={2} lg={2}>{ItemList[index].capital}</Col>\r\n            <Col className=\"grid-col\" md={2} lg={2}>{ItemList[index].region}</Col>\r\n            <Col className=\"grid-col\" md={2} lg={2}>{ItemList[index].population}</Col>\r\n            <Col className=\"grid-col\" md={2} lg={2}>{ItemList[index].area}</Col>\r\n            <Col className=\"grid-col\" md={1} lg={1}><img className=\"w-75 h-auto\" alt=\"img\" src={ItemList[index].flag}/></Col>\r\n        </Row>\r\n    );\r\n\r\n\r\n\r\n\r\n\r\n    const SearchRow=(e)=>{\r\n      let rowNo= e.target.value;\r\n      if(parseInt(rowNo)){\r\n        listRef.current.scrollToItem(parseInt(rowNo), \"start\");\r\n      }\r\n\r\n    }\r\n\r\n    const SearchList=(e)=>{\r\n        let keyword=e.target.value;\r\n        if (keyword !== '') {\r\n            const results = ItemList.filter((search) => {\r\n                return search.name.toLowerCase().startsWith(keyword.toLowerCase());\r\n            });\r\n            SetItemList(results);\r\n        }\r\n        else {\r\n            SetItemList(props.ItemList);\r\n        }\r\n        SetSearchKey1(keyword);\r\n    }\r\n\r\n    const ExportXLXS=(data)=>{\r\n        const fileName = 'download'\r\n        const exportType = 'xls'\r\n\r\n        exportFromJSON({ data, fileName, exportType })\r\n    }\r\n\r\n    const ExportCSV=(data)=>{\r\n        const fileName = 'download'\r\n        const exportType = 'csv'\r\n        exportFromJSON({ data, fileName, exportType })\r\n    }\r\n\r\n\r\n    const listRef = React.createRef();\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <Container  className=\"content\" >\r\n                <Row className=\"d-flex justify-content-center\">\r\n                    <Col md={10} lg={10} className=\"grid-card\" >\r\n                        <Container className=\"my-3\" fluid={true} >\r\n                            <Row>\r\n                                <Col md={3} lg={3}>\r\n                                    <input placeholder=\"Search..\" className=\"form-control\" onChange={SearchList} type=\"text\"/>\r\n                                </Col>\r\n                                <Col md={2} lg={2}>\r\n                                    <input onChange={SearchRow} placeholder=\"Row No\" className=\"form-control mx-1\"  type=\"text\"/>\r\n                                </Col>\r\n                                <Col md={2} lg={2}>\r\n                                    <Dropdown>\r\n                                        <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n                                            <RiFileExcel2Line/>  Excel Export\r\n                                        </Dropdown.Toggle>\r\n\r\n                                        <Dropdown.Menu>\r\n                                            <Dropdown.Item onClick={ExportCSV.bind(this,ItemList)}><button className=\"btn\" > Export CSV</button> </Dropdown.Item>\r\n                                            <Dropdown.Item onClick={ExportXLXS.bind(this,ItemList)}><button className=\"btn\" > Export xls</button> </Dropdown.Item>\r\n                                        </Dropdown.Menu>\r\n                                    </Dropdown>\r\n\r\n                                </Col>\r\n                                <Col md={2} lg={2}>\r\n\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n\r\n                        <Container className=\"my-0\" fluid={true} >\r\n                            <Row className=\"grid-row-head my-0 mx-0\">\r\n                                <Col className=\"grid-col-head-first\" md={1} lg={1} >No</Col>\r\n                                <Col className=\"grid-col-head \" md={2} lg={2}>Name</Col>\r\n                                <Col className=\"grid-col-head\" md={2} lg={2}>Name</Col>\r\n                                <Col className=\"grid-col-head\" md={2} lg={2}>Name</Col>\r\n                                <Col className=\"grid-col-head\" md={2} lg={2}>Name</Col>\r\n                                <Col className=\"grid-col-head\" md={2} lg={2}>Name</Col>\r\n                                <Col className=\"grid-col-head\" md={1} lg={1}>Name</Col>\r\n                            </Row>\r\n                        </Container>\r\n\r\n                        <Container className=\"my-0\"   fluid={true} >\r\n                            <FixedSizeList ref={listRef} {...props} className=\"grid-div\" itemCount={ItemList.length} height={400} itemSize={35}  >\r\n                                {RowList}\r\n                            </FixedSizeList>\r\n                        </Container>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default BusinessTable;","import React, {Fragment, useEffect, useState} from 'react';\r\nimport axios from \"axios\";\r\nimport BusinessTable from \"../component/BusinessTable\";\r\nimport {Container} from \"react-bootstrap\";\r\n\r\nconst BusinessTablePage = () => {\r\n\r\n    const [ItemList,SetItemList]=useState([])\r\n    useEffect(()=>{\r\n        axios.get(\"https://restcountries.eu/rest/v2/all\")\r\n            .then((res)=>{\r\n                SetItemList(res.data)\r\n            })\r\n    },[])\r\n\r\n    if(ItemList.length===0){\r\n        return(\r\n            <Fragment>\r\n\r\n            </Fragment>\r\n        )\r\n    }\r\n    else {\r\n        return(\r\n            <Fragment>\r\n                <BusinessTable ItemList={ItemList}/>\r\n            </Fragment>\r\n        )\r\n    }\r\n};\r\n\r\nexport default BusinessTablePage;","import React, {Fragment} from 'react';\nimport BusinessTablePage from \"./pages/BusinessTablePage\";\nconst App = () => {\n    return (\n        <Fragment>\n            <BusinessTablePage/>\n        </Fragment>\n    );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport  './assets/css/bootstrap.min.css';\nimport  './assets/css/animate.min.css';\nimport  './assets/css/BusinessTable.css';\nimport reportWebVitals from './reportWebVitals';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nreportWebVitals();\n"],"sourceRoot":""}